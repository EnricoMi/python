name: "CI"
on: [push, pull_request, workflow_dispatch]
permissions: {}

jobs:
  event_file:
    name: "Event File"
    runs-on: ubuntu-latest
    steps:
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Event File
        path: ${{ github.event_path }}

  shell:
    name: "Test shell ${{ matrix.machine }}"
    runs-on: ${{ matrix.machine }}
    strategy:
      fail-fast: false
      matrix:
        machine: ["ubuntu-latest", "macos-latest", "windows-latest"]

    steps:
    - name: bash
      continue-on-error: true
      run: true
      shell: bash

    - name: sh
      continue-on-error: true
      run: true
      shell: sh

    - name: python
      continue-on-error: true
      run: |
        import sys
        print(sys.platform)
      shell: python

    - name: pwsh
      continue-on-error: true
      run: |
        write-output "pwsh"
      shell: pwsh

    - name: cmd
      continue-on-error: true
      run: |
        echo cmd
      shell: cmd

    - name: powershell
      continue-on-error: true
      run: |
        write-output "pwsh"
      shell: powershell

  macos:
    name: "MacOS"

    runs-on: ${{ matrix.machine }}
    strategy:
      fail-fast: false
      matrix:
        machine: ["macos-latest", "macos-13", "macos-12", "macos-11"]

    steps:
    - name: sysctl
      run: sysctl -a
      shell: bash

  build_and_test:
    name: "Build and Test"

    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8"]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest

    - name: Test with pytest
      run: |
        mkdir -p test-results
        python -m pytest test --junit-xml test-results/pytest.xml

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Unit Test Results ${{ matrix.python-version }}
        path: "test-results/**/*.xml"

  test_success:
    name: "Test success"
    runs-on: ubuntu-latest
    needs: [build_and_test]
    if: always()
    steps:
      - name: "Inspect test outcome"
        run: |
          echo "${{ toJSON( needs ) }}"
          [ "${{ needs.build_and_test.result }}" == "success" ]
        shell: bash

  publish_test_results:
    name: "Publish Unit Tests"
    needs: build_and_test
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    if: always()

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Debug Action
      uses: hmarr/debug-action@v1.0.0

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: "artifacts/**/*.xml"

    - name: Publish Unit Test Results (composite)
      uses: EnricoMi/publish-unit-test-result-action/composite@master
      with:
        check_name: "Test Results (composite)"
        files: "artifacts/**/*.xml"
