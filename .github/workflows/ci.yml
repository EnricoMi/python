name: "CI"
on: [push, pull_request]

jobs:
  event_file:
    name: "Event File"
    runs-on: ubuntu-latest
    steps:
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: Event File
        path: ${{ github.event_path }}
  disks:
    name: "Inspect disks"
    runs-on: ubuntu-latest

    steps:
    - name: Largest files
      run: sudo find / -xdev -type f -size +100M -exec du -s {} ';' | sort -rn | head -n 200
    - name: Largest dirs
      run: sudo find / -xdev -type d -exec du -s {} ';' | sort -rn | head -n 1000

  cleanup:
    name: "Cleanup disks"
    runs-on: ubuntu-latest

    steps:
    - name: Space before delete
      run: df -h
    - name: Clean up
      run: sudo rm -rf /opt/hostedtoolcache/CodeQL /usr/share/dotnet /usr/local/lib/android /opt/ghc /usr/lib/google-cloud-sdk /opt/hostedtoolcache/go /usr/lib/mono /opt/google/chrome /usr/local/share/chromium /home/runner/runners/*.tgz
    - name: Space after delete
      run: df -h

  build_and_test:
    name: "Build and Test"

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest

    - name: Test with pytest
      run: |
        mkdir -p test-results
        python -m pytest test --junit-xml test-results/pytest.xml

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Unit Test Results ${{ matrix.python-version }}
        path: "test-results/**/*.xml"

  publish_test_results:
    name: "Publish Unit Tests"
    needs: build_and_test
    runs-on: ubuntu-latest
    if: always()

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Debug Action
      uses: hmarr/debug-action@v1.0.0

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      with:
        files: "artifacts/**/*.xml"
        log_level: DEBUG
